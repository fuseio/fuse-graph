specVersion: 0.0.2
repository: https://github.com/fuseio/fuse-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: MainnetBridgeMapper
    network: fuse
    source:
      address: '{{mainnetBridgeMapper.address}}'
      startBlock: {{mainnetBridgeMapper.startBlock}}
      abi: BridgeMapper
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - BridgeMappingUpdated
      abis:
        - name: BridgeMapper
          file: ./abis/BridgeMapper.json
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: BridgeMappingUpdated(bytes32,address,address,address,address,uint256,uint256)
          handler: handleMainnetBridgeMappingUpdated
      file: ./src/mappings/bridge.ts
  - kind: ethereum/contract
    name: RopstenBridgeMapper
    network: fuse
    source:
      address: '{{ropstenBridgeMapper.address}}'
      startBlock: {{ropstenBridgeMapper.startBlock}}
      abi: BridgeMapper
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - BridgeMappingUpdated
      abis:
        - name: BridgeMapper
          file: ./abis/BridgeMapper.json
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: BridgeMappingUpdated(bytes32,address,address,address,address,uint256,uint256)
          handler: handleRopstenBridgeMappingUpdated
      file: ./src/mappings/bridge.ts
  - kind: ethereum/contract
    name: WalletFactory
    network: fuse
    source:
      address: '{{walletFactory.address}}'
      startBlock: {{walletFactory.startBlock}}
      abi: WalletFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - WalletFactory
      abis:
        - name: WalletFactory
          file: ./abis/WalletFactory.json
      eventHandlers:
        - event: WalletCreated(indexed address,indexed address)
          handler: handleWalletCreated
      file: ./src/mappings/wallet.ts
  - kind: ethereum/contract
    name: WalletFactoryV2
    network: fuse
    source:
      address: '{{walletFactoryV2.address}}'
      startBlock: {{walletFactoryV2.startBlock}}
      abi: WalletFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - WalletFactory
      abis:
        - name: WalletFactory
          file: ./abis/WalletFactory.json
      eventHandlers:
        - event: WalletCreated(indexed address,indexed address)
          handler: handleWalletCreated
      file: ./src/mappings/wallet.ts
  - kind: ethereum/contract
    name: CommunityFactory
    network: fuse
    source:
      address: '{{communityFactory.address}}'
      startBlock: {{communityFactory.startBlock}}
      abi: CommunityFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CommunityFactory
        - EntitiesList
      abis:
        - name: CommunityFactory
          file: ./abis/CommunityFactory.json
        - name: Community
          file: ./abis/CommunityWithEvents.json
      eventHandlers:
        - event: CommunityCreated(indexed address,string)
          handler: handleCommunityCreated
      file: ./src/mappings/entities.ts
  - kind: ethereum/contract
    name: CommunityFactoryV2
    network: fuse
    source:
      address: '{{communityFactoryV2.address}}'
      startBlock: {{communityFactoryV2.startBlock}}
      abi: CommunityFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CommunityFactory
        - EntitiesList
      abis:
        - name: CommunityFactory
          file: ./abis/CommunityFactory.json
        - name: Community
          file: ./abis/CommunityWithEvents.json
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: CommunityCreated(indexed address,string)
          handler: handleCommunityCreated
        - event: TokenRegistered(indexed address,address)
          handler: handleTokenRegistered
      file: ./src/mappings/entities.ts
templates:
  - kind: ethereum/contract
    name: Token
    network: fuse
    source:
      abi: Token
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/tokens.ts
      entities:
        - Token
        - TransferEvent
      abis:
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Transfer(indexed address,indexed address,uint256,bytes)
          handler: handleTransferWithData
        - event: TransferManagerSet(address)
          handler: handleTransferManagerSet
  - kind: ethereum/contract
    name: HomeBridgeErcToErc
    network: fuse
    source:
      abi: HomeBridgeErcToErc
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/bridge.ts
      entities:
        - HomeBridgeErcToErc
      abis:
        - name: HomeBridgeErcToErc
          file: ./abis/HomeBridgeErcToErc.json
      eventHandlers:
        - event: UserRequestForSignature(address,uint256,bytes)
          handler: handleUserRequestForSignature
        - event: CollectedSignatures(address,bytes32,uint256)
          handler: handleCollectedSignatures
  - kind: ethereum/contract
    name: EntitiesList
    network: fuse
    source:
      abi: EntitiesList
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings/entities.ts
      entities:
        - Entity
      abis:
        - name: EntitiesList
          file: ./abis/EntitiesList.json
      eventHandlers:
        - event: EntityAdded(indexed address,bytes32)
          handler: handleEntityAdded
        - event: EntityRemoved(indexed address)
          handler: handleEntityRemoved
        - event: EntityRolesUpdated(indexed address,bytes32)
          handler: handleEntityRolesUpdated